/* Generated by AN DISI Unibo */ 
package it.unibo.button

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Button ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
protected var timerCount = 0         				 	//used by onMsg
protected var timerEventName = ""    					//used by onMsg


	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						resources.buttonForChain.create(  )
					}
					 transition(edgeName="t00",targetState="s1",cond=whenDispatch("click"))
				}	 
				state("s1") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						forward("buttonCmd", "buttonCmd" ,"control" ) 
					}
					 transition(edgeName="t11",targetState="s1",cond=whenDispatch("click"))
				}	 
			}
		}
}
