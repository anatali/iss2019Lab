/* Generated by AN DISI Unibo */ 
package it.unibo.butlermind

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Butlermind ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("&&&  butlermindSTARTED")
					}
					 transition( edgeName="goto",targetState="reachTheFridge", cond=doswitch() )
				}	 
				state("reachTheFridge") { //this:State
					action { //it:State
						delay(1000) 
						println("&&&  butler going from HOME to FRIDGE")
						forward("setTheGoal", "setTheGoal(0,6)" ,"workerinroom" ) 
					}
					 transition(edgeName="t00",targetState="reachTheTable",cond=whenDispatch("goalReached"))
				}	 
				state("reachTheTable") { //this:State
					action { //it:State
						delay(1000) 
						println("&&&  butler going from FRIDGE to TABLE")
						forward("setTheGoal", "setTheGoal(5,3)" ,"workerinroom" ) 
					}
					 transition(edgeName="t01",targetState="backToHome",cond=whenDispatch("goalReached"))
				}	 
				state("backToHome") { //this:State
					action { //it:State
						delay(1000) 
						println("&&&  butler going to HOME")
						forward("setTheGoal", "setTheGoal(0,0)" ,"workerinroom" ) 
					}
					 transition(edgeName="t02",targetState="atHome",cond=whenDispatch("goalReached"))
				}	 
				state("atHome") { //this:State
					action { //it:State
						println("&&&  butler IS AT HOME")
					}
				}	 
			}
		}
}
