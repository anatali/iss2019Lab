/* Generated by AN DISI Unibo */ 
package it.unibo.plantester

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Plantester ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		var stepCounter = 0
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("&&&  plantester STARTED")
						itunibo.planner.plannerUtil.initAI(  )
						println("INITIAL MAP")
						itunibo.planner.plannerUtil.showMap(  )
						println("------------------------------------")
						itunibo.planner.plannerUtil.startTimer(  )
					}
					 transition( edgeName="goto",targetState="exploreStep", cond=doswitch() )
				}	 
				state("exploreStep") { //this:State
					action { //it:State
						stepCounter = stepCounter + 1
						itunibo.planner.plannerUtil.setGoal( "$stepCounter", "$stepCounter"  )
						itunibo.planner.plannerUtil.doPlan(  )
						itunibo.planner.plannerUtil.executeMoves(  )
						println("MAP AFTER EXPLORE STEP")
						itunibo.planner.plannerUtil.showMap(  )
						println("------------------------------------")
					}
					 transition( edgeName="goto",targetState="backToHome", cond=doswitch() )
				}	 
				state("backToHome") { //this:State
					action { //it:State
						itunibo.planner.plannerUtil.setGoal( 0, 0  )
						itunibo.planner.plannerUtil.doPlan(  )
						itunibo.planner.plannerUtil.executeMoves(  )
						println("MAP AFTER BACK TO HOME")
						itunibo.planner.plannerUtil.showMap(  )
						println("------------------------------------")
					}
					 transition( edgeName="goto",targetState="exploreStep", cond=doswitchGuarded({(stepCounter < 4)}) )
					transition( edgeName="goto",targetState="endOfJob", cond=doswitchGuarded({! (stepCounter < 4)}) )
				}	 
				state("endOfJob") { //this:State
					action { //it:State
						itunibo.planner.plannerUtil.getDuration(  )
					}
				}	 
			}
		}
}
