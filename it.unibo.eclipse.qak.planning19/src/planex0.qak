System planex0

Context ctxPanex0    ip [host="localhost" port=8038]  

QActor planex0 context ctxPanex0{      
["  
var Curmove     = \"\"  
var IterCounter = 0  
"]	
	State s0 initial {	 
		println("&&&  planex0 STARTED")
		run itunibo.planner.plannerUtil.initAI()
		println("INITIAL MAP") 
 		run itunibo.planner.plannerUtil.showMap() 
 		run itunibo.planner.plannerUtil.setGoal("2","2")
 		run itunibo.planner.moveUtils.doPlan( myself ) //moves stored in actor kb
 	}
    Goto executePlannedActions 
     
    State executePlannedActions{ 
 		solve( retract( move(M) ) ) 	//consume a move
		ifSolved {   
			["Curmove = getCurSol(\"M\").toString()"]  
			run itunibo.planner.moveUtils.doPlannedMove(myself, Curmove)
		} else { ["Curmove=\"nomove\" "] 		} 
 
  	}  
	Goto executePlannedActions  if "(Curmove != \"nomove\")" else nextStep
 
 	State nextStep{
 		println("MAP after step $IterCounter")  
 		run itunibo.planner.plannerUtil.showMap() 
  		["IterCounter++"]
 	}
 	Goto endOfJob if "(IterCounter==2)" else donextStep 
 	
  	State donextStep{
  		run itunibo.planner.plannerUtil.setGoal("1","1")    
  		run itunibo.planner.moveUtils.doPlan( myself ) 
  	}
 	Goto executePlannedActions 
   	
	State endOfJob{
		println("FINAL MAP")   
 		run itunibo.planner.plannerUtil.showMap() 
		println("&&&  planex0 ENDS")
 	}
}	

 