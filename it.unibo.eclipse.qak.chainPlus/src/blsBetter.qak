/*
 * This model gives essential and relevant information about
 * 	     STRUCTURE, INTERACTION and BEHAVIOR
 * about the ButtonLed system
 * 
 * The model is EXECUTABLE
 * 
 * The generation of a distributed system is quite easy
 */

System blsBetter

//mqttBroker "192.168.1.18" : 1883

Event    local_buttonCmd : local_buttonCmd(X) 
Dispatch ledCmd : ledCmd(X)  

Context ctxBlsBetter ip [host="localhost" port=8075]		//used for testing
//Context ctxBlsBetterConsole ip [host="192.168.1.18"  port=8075]	//-mqtt	
//Context ctxBlsBetterLed     ip [host="192.168.1.3"  port=8065]	//-mqtt	

QActor button context ctxBlsBetter {	//generates local_buttonCmd 
	State s0 initial { 
		run resources.bls.better.buttonEventEmitter.create()                      
	}    
}   

QActor blscontrol context ctxBlsBetter {
	State s0 initial { 	}
	Transition t0 whenEvent local_buttonCmd -> turnOn 
	
	State turnOn{ forward led -m ledCmd : ledCmd(on) }
	Transition t1 whenTime 200 -> turnOff
				  whenEvent local_buttonCmd -> s0
	
	State turnOff{ forward led -m ledCmd : ledCmd(off) }
	Transition t1 whenTime 200 -> turnOn
		          whenEvent local_buttonCmd -> s0
}	

//CodedQActor led context ctxBlsBetter className "it.unibo.bls19d.qak.LedActork"//"resources.LedActork" 

QActor led context ctxBlsBetter {
	State s0 initial { 	}
	Transition t0 whenEvent ledCmd -> handleLedCmd
	 
	State  handleLedCmd{
		onMsg ( ledCmd : ledCmd(X) ) { println( "ledmock receives: ${meta_msgArg(0)}" ) }
	}	
	Goto s0
}